{"version":3,"sources":["webpack:///./src/hooks/index.js","webpack:///./src/components/homepage/parts/HomepageWaypoint.js","webpack:///./src/components/homepage/Intro.js","webpack:///./src/components/homepage/About.js","webpack:///./src/components/homepage/parts/VideoClip.js","webpack:///./src/components/homepage/parts/ImageClip.js","webpack:///./src/components/homepage/parts/ShowCard.js","webpack:///./src/components/homepage/Shows.js","webpack:///./src/components/homepage/Demos.js","webpack:///./src/components/homepage/Talks.js","webpack:///./src/pages/index.js"],"names":["useIntersect","root","rootMargin","threshold","useState","entry","updateEntry","node","setNode","observer","useRef","useEffect","current","disconnect","window","IntersectionObserver","currentObserver","observe","HomepageWaypoint","zone","children","dispatch","useDispatch","windowSize","isClient","getSize","width","innerWidth","undefined","height","innerHeight","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","ref","setThreshold","useMemo","elHeight","offsetHeight","viewHeight","isIntersecting","enterZone","exitZone","Intro","className","id","About","query","render","data","fluid","file","childImageSharp","href","target","VideoClip","clip","muted","isPlaying","onEnded","src","videoEl","play","pause","currentTime","crossOrigin","preload","playsInline","ImageClip","image","console","log","CLIP_TYPES","video","ShowCard","show","clips","title","company","description","isMuted","useSelector","state","currentClipIndex","setCurrentClipIndex","changeCurrentClipIndex","newClipIndex","stopVideo","playVideo","map","i","ClipComponent","type","key","length","onClick","setMute","paragraph","dangerouslySetInnerHTML","__html","Shows","allShowsYaml","nodes","Demos","allDemosYaml","demo","Talks","allTalksYaml","talk","Index","props"],"mappings":"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","file":"component---src-pages-index-js-b5a475f39b8f3794fb38.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n// Hook\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    \n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\nexport function useIntersect ({ root = null, rootMargin, threshold = [0] }) {\n  const [entry, updateEntry] = useState({});\n  const [node, setNode] = useState(null);\n\n  const observer = useRef(null);\n\n  useEffect(\n    () => {\n      if(observer.current) {\n        observer.current.disconnect();\n      }\n      observer.current = new window.IntersectionObserver(([entry]) => updateEntry(entry), {\n        root,\n        rootMargin,\n        threshold\n      })\n\n      const { current: currentObserver } = observer;\n      if (node) currentObserver.observe(node);\n\n      return () => currentObserver.disconnect();\n    },\n    [node, root, rootMargin, threshold]\n  );\n\n  return [setNode, entry];\n};","import React, { useEffect, useMemo, useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n  enterZone,\n  exitZone\n} from '../../../state/actions';\nimport {\n  useIntersect,\n  useWindowSize\n} from '../../../hooks';\n\nconst HomepageWaypoint = ({ zone, children }) => {\n  const dispatch = useDispatch();\n  const windowSize = useWindowSize();\n  const ref = useRef(null);\n  const [threshold, setThreshold] = useState(0.5);\n  const thresholdArray = useMemo(() => [threshold], [threshold]);\n  const [setNode, entry] = useIntersect({\n    threshold: thresholdArray\n  });\n  useEffect(() => {\n    if(ref.current){\n      setNode(ref.current);\n      let elHeight = ref.current.offsetHeight;\n      let viewHeight = windowSize.height;\n      if(elHeight > viewHeight){\n        let newThreshold = viewHeight / (2*elHeight);\n        setThreshold(newThreshold);\n      } else {\n        setThreshold(0.5);\n      }\n    }\n  }, [windowSize, ref]);\n  useEffect(() => {\n    // console.log(`ENTRY ${zone}`, entry);\n    if(entry.isIntersecting){\n      dispatch(enterZone(zone));\n    } else {\n      dispatch(exitZone(zone));\n    }\n    return () => dispatch(exitZone(zone));\n  }, [zone, dispatch, entry]);\n\n  return (\n    <div ref={ref}>\n      { children }\n    </div>\n  )\n}\n\nexport default HomepageWaypoint\n","import React from 'react'\nimport HomepageWaypoint from './parts/HomepageWaypoint';\nimport './intro.scss'\n\nconst Intro = () => {\n  return (\n    <HomepageWaypoint zone=\"INTRO\">\n      <div className=\"intro-page\" id=\"intro\">\n        <h1 className=\"intro-title\">Chris Uehlinger</h1>\n      </div>\n    </HomepageWaypoint>\n  );\n}\n\nexport default Intro\n","import React from 'react'\nimport HomepageWaypoint from './parts/HomepageWaypoint';\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport './about.scss'\n\nconst About = () => {\n  return (\n    <HomepageWaypoint zone=\"ABOUT\">\n      <div className=\"about-page\" id=\"about\">\n        <div className=\"about-card\">\n          <div className=\"about-image-wrapper\">\n            <StaticQuery\n              query={graphql`\n                query HeadshotQuery {\n                  file(relativePath: { eq: \"images/ChrisHeadshot1.jpg\" }) {\n                    childImageSharp {\n                      fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              `}\n              render={data => <Img className=\"about-image\" fluid={data.file.childImageSharp.fluid} /> }/>\n            <p className=\"about-image-caption\">Credit: <a href=\"https://www.shealynjaephotography.com/\" target=\"_blank\">Shealyn Jae</a></p>\n          </div>\n          <div className=\"about-blurb\">\n            <p>\n            Hi there! My name is Chris Uehlinger. I'm a... well I do a lot of stuff, including web development, projection/video design for theatre, VR development, voiceover work, 3D graphics and I've taught programming both abroad (at โรงเรียนเซนต์คาเบรียล in Bangkok) and stateside (through talks at charmCityJS and volunteering for Baltimore NodeSchool).\n            </p>\n          </div>\n        </div>\n      </div>\n    </HomepageWaypoint>\n  );\n}\n\nexport default About\n","import React, { useEffect, useRef } from 'react'\nimport './video-clip.scss';\n\nconst VideoClip = ({ clip, muted, isPlaying, onEnded }) => {\n  const { id, src } = clip;\n  const videoEl = useRef(null);\n  useEffect(() => {\n    if(videoEl.current){\n      if(isPlaying) {\n        videoEl.current.play();\n      } else {\n        videoEl.current.pause();\n        videoEl.current.currentTime = 0;\n      }\n    }\n  }, [videoEl, isPlaying]);\n  return (\n    <div className=\"video-clip\">\n      <video\n        className={isPlaying ? 'playing' : 'hidden'}\n        id={id}\n        src={src}\n        ref={videoEl}\n        crossOrigin=\"anonymous\"\n        preload=\"auto\"\n        playsInline\n        onEnded={ onEnded }\n        muted={muted}\n      ></video>\n    </div>\n  );\n}\n\n\nexport default VideoClip","import React, { useEffect, useRef } from 'react'\nimport Img from \"gatsby-image\"\nimport './image-clip.scss';\n\nconst ImageClip = ({ clip, isPlaying, onEnded }) => {\n  const { id, image } = clip;\n  // useEffect(() => {\n  //   if(isPlaying) {\n  //     videoEl.current.play();\n  //   } else {\n  //     videoEl.current.pause();\n  //     videoEl.current.currentTime = 0;\n  //   }\n  // }, [isPlaying]);\n  console.log('IMAGE?', image);\n  return (\n    <div className=\"image-clip\">\n      <Img\n        className={isPlaying ? 'playing' : 'hidden'}\n        id={id}\n        fluid={image.childImageSharp.fluid}\n      />\n    </div>\n  );\n}\n\n\nexport default ImageClip","import React, { useEffect, useState, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport {\n  playVideo,\n  stopVideo,\n  setMute\n} from '../../../state/actions';\nimport { useIntersect } from '../../../hooks';\nimport VideoClip from './VideoClip';\nimport ImageClip from './ImageClip';\nimport './show-card.scss';\n\nconst CLIP_TYPES = {\n  image: ImageClip,\n  video: VideoClip\n}\n\nconst ShowCard = (show) => {\n  const {id, clips, title, company, description} = show;\n  const dispatch = useDispatch();\n  const { isMuted } = useSelector(state => state);\n  const [threshold, setThreshold] = useState(0.5);\n  const thresholdArray = useMemo(() => [threshold], [threshold]);\n  const [ref, entry] = useIntersect({\n    threshold: thresholdArray\n  });\n  const [currentClipIndex, setCurrentClipIndex] = useState(0);\n  useEffect(() => {\n    console.log(`ENTRY ${id}`, entry);\n    if(entry.isIntersecting){\n      if(clips[currentClipIndex]) {\n        dispatch(playVideo(clips[currentClipIndex]));\n      }\n    } else {\n      if(clips[currentClipIndex]) {\n        dispatch(stopVideo(clips[currentClipIndex]));\n      }\n    }\n    return () => {\n      if(clips[currentClipIndex]) {\n        dispatch(stopVideo(clips[currentClipIndex]));\n      }\n    }\n  }, [show, dispatch, entry]);\n\n  function changeCurrentClipIndex(newClipIndex) {\n    if(entry.isIntersecting){\n      dispatch(stopVideo(clips[currentClipIndex]));\n      dispatch(playVideo(clips[newClipIndex]));\n      setCurrentClipIndex(newClipIndex);\n    }\n  }\n\n  return (\n    <div className=\"show-card\" ref={ref}>\n      <div className=\"clips-wrapper\">\n        {\n          clips.map((clip, i) => {\n            const ClipComponent = CLIP_TYPES[clip.type];\n            return <ClipComponent key={clip.id} clip={clip} muted={isMuted} isPlaying={ currentClipIndex === i && entry.isIntersecting} onEnded={() => changeCurrentClipIndex((currentClipIndex+1) % clips.length) }/>\n          })\n        }\n      </div>\n      <div className=\"show-blurb\">\n        <h3>{ title }</h3>\n        <h4>{company}</h4>\n        { !!clips.length &&\n          <div className=\"clip-controls\">\n            <button onClick={() => dispatch(setMute(!isMuted)) }>\n              <i className=\"material-icons\">\n                {isMuted ? 'volume_off' : 'volume_up'}\n              </i>\n            </button>\n            {\n              clips.length > 1 && (\n                <>\n                  <button onClick={() => changeCurrentClipIndex((currentClipIndex - 1 + clips.length) % clips.length) }>\n                    <i className=\"material-icons\">\n                      fast_rewind\n                    </i>\n                  </button>\n                  <button onClick={() => changeCurrentClipIndex((currentClipIndex + 1) % clips.length) }>\n                    <i className=\"material-icons\">\n                      fast_forward\n                    </i>\n                  </button>\n                  <div>\n                    { `Playing ${currentClipIndex+1} of ${clips.length}`}\n                  </div>\n                </>\n              )\n            }\n          </div>\n        }\n        {\n          description.map((paragraph, i) => <p key={i} dangerouslySetInnerHTML={{ __html: paragraph}} />)\n        }\n      </div>\n    </div>\n  );\n}\n\n\nexport default ShowCard","import React from 'react'\nimport { StaticQuery, graphql } from \"gatsby\"\nimport HomepageWaypoint from './parts/HomepageWaypoint';\nimport ShowCard from './parts/ShowCard';\nimport './shows.scss'\n\nconst Shows = () => (\n  <HomepageWaypoint zone=\"SHOWS\">\n    <div className=\"shows-page\" id=\"shows\">\n      <h2>Shows</h2>\n      <StaticQuery\n        query={graphql`\n          query ShowQuery {\n            allShowsYaml {\n              nodes {\n                company\n                description\n                id\n                title\n                clips {\n                  height\n                  id\n                  src\n                  type\n                  width\n                  image {\n                    childImageSharp {\n                      fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => data.allShowsYaml.nodes.map(show => <ShowCard key={show.id} {...show}/>) }/>\n    </div>\n  </HomepageWaypoint>\n);\n\nexport default Shows\n","import React from 'react'\nimport { StaticQuery, graphql } from \"gatsby\"\nimport HomepageWaypoint from './parts/HomepageWaypoint';\nimport ShowCard from './parts/ShowCard';\nimport './demos.scss'\n\nconst Demos = () => (\n  <HomepageWaypoint zone=\"DEMOS\">\n    <div className=\"demos-page\" id=\"demos\">\n      <h2>Demos</h2>\n      <StaticQuery\n        query={graphql`\n          query DemoQuery {\n            allDemosYaml {\n              nodes {\n                company\n                description\n                id\n                title\n                clips {\n                  height\n                  id\n                  src\n                  type\n                  width\n                  image {\n                    childImageSharp {\n                      fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => data.allDemosYaml.nodes.map(demo => <ShowCard key={demo.id} {...demo}/>) }/>\n    </div>\n  </HomepageWaypoint>\n);\n\nexport default Demos\n","import React from 'react'\nimport { StaticQuery, graphql } from \"gatsby\"\nimport HomepageWaypoint from './parts/HomepageWaypoint';\nimport ShowCard from './parts/ShowCard';\nimport './talks.scss'\n\nconst Talks = () => (\n  <HomepageWaypoint zone=\"TALKS\">\n    <div className=\"talks-page\" id=\"talks\">\n      <h2>Talks</h2>\n      <StaticQuery\n        query={graphql`\n          query TalkQuery {\n            allTalksYaml {\n              nodes {\n                company\n                description\n                id\n                title\n                clips {\n                  height\n                  id\n                  src\n                  type\n                  width\n                  image {\n                    childImageSharp {\n                      fluid(maxWidth: 300) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => data.allTalksYaml.nodes.map(talk => <ShowCard key={talk.id} {...talk}/>) }/>\n    </div>\n  </HomepageWaypoint>\n);\n\nexport default Talks\n","import React from \"react\"\nimport { graphql } from 'gatsby';\nimport SEO from '../components/seo'\nimport IntroPage from '../components/homepage/Intro'\nimport AboutPage from '../components/homepage/About'\nimport ShowsPage from '../components/homepage/Shows'\nimport DemosPage from '../components/homepage/Demos'\nimport TalksPage from '../components/homepage/Talks'\n\nimport Wrapper from '../components/wrapper'\n\nconst Index = (props) => {\n  console.log('INDEX PROPS', props);\n  return (\n    <Wrapper>\n      <main className=\"homepage-body\">\n        <SEO title=\"Home\" />\n        <IntroPage />\n\n        <AboutPage />\n\n        <ShowsPage />\n\n        <DemosPage />\n\n        <TalksPage />\n      </main>\n    </Wrapper>\n  );\n}\n\nexport default Index;\n"],"sourceRoot":""}